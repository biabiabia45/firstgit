<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="myproject.wallet.domain.mapper.UserMapper">

    <!-- 查询用户信息通过ID -->
    <select id="findUserById" resultType="myproject.wallet.domain.user.entity.User">
        SELECT *
        FROM user
        WHERE id = #{id}
    </select>

    <select id="findByUsername" resultType="myproject.wallet.domain.user.entity.User">
        SELECT *
        FROM user
        WHERE username = #{username}
    </select>

    <select id="findByEmail" resultType="myproject.wallet.domain.user.entity.User">
        SELECT *
        FROM user
        WHERE email = #{email}
    </select>

    <!-- 查询所有用户信息 -->
    <select id="findAllUser" resultType="myproject.wallet.domain.user.entity.User">
        SELECT *
        FROM user
    </select>

    <!-- 插入用户信息 -->
    <insert id="insertUser" parameterType="myproject.wallet.domain.user.entity.User" useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO user (username, password, email, address) VALUES (#{username}, #{password}, #{contactInfo.email}, #{contactInfo.address})
    </insert>

    <resultMap id="UserResultMap" type="myproject.wallet.domain.user.entity.User">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <association property="contactInfo" javaType="myproject.wallet.domain.valueobject.ContactInfo">
            <result property="email" column="email"/>
            <result property="address" column="address"/>
        </association>
    </resultMap>

    <!-- 更新用户信息 -->
    <update id="updateUser" parameterType="myproject.wallet.domain.user.entity.User">
        UPDATE user
        SET username = #{username},
            email    = #{email},
            password = #{password},
            address  = #{address}
        WHERE id = #{id}
    </update>

    <!-- 检查用户是否存在 -->
    <select id="existsUserById" resultType="boolean">
        SELECT EXISTS(SELECT 1 FROM user WHERE id = #{id})
    </select>

    <!-- 删除用户信息 -->
    <delete id="deleteUserById">
        DELETE
        FROM user
        WHERE id = #{id}
    </delete>

</mapper>
